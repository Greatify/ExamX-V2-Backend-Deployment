apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: examxv2-production

resources:
  - ../../base
  - storage/pv.yaml
  - storage/pvc.yaml
  - storage/storage-class.yaml

labels:
  - pairs:
      environment: production
      tier: prod
    includeSelectors: false

patches:
  # Backend Deployment patches
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: examxv2-backend
      spec:
        replicas: 2
        template:
          spec:
            serviceAccountName: examxv2-production-sa
            containers:
            - name: examxv2-backend
              resources:
                requests:
                  cpu: "2"
                  memory: "8Gi"
                limits:
                  cpu: "4"
                  memory: "16Gi"
              env:
              - name: WORKERS
                value: "4"
    target:
      kind: Deployment
      name: examxv2-backend

  # Celery Worker patches
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: celery-worker
      spec:
        replicas: 1
        template:
          spec:
            serviceAccountName: examxv2-production-sa
            containers:
            - name: celery-worker
              resources:
                requests:
                  cpu: "1"
                  memory: "4Gi"
                limits:
                  cpu: "2"
                  memory: "8Gi"
    target:
      kind: Deployment
      name: celery-worker
  # Celery beat patches
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: celery-beat
      spec:
        replicas: 1
        template:
          spec:
            serviceAccountName: examxv2-production-sa
            containers:
            - name: celery-beat
              resources:
                requests:
                  cpu: "1"
                  memory: "4Gi"
                limits:
                  cpu: "2"
                  memory: "8Gi"
    target:
      kind: Deployment
      name: celery-beat
  # Backend Autoscaler patches
  - patch: |-
      apiVersion: autoscaling/v2
      kind: HorizontalPodAutoscaler
      metadata:
        name: examxv2-backend-pod-autoscaler
      spec:
        minReplicas: 2
    target:
      kind: HorizontalPodAutoscaler
      name: examxv2-backend-pod-autoscaler

  # Celery Worker Autoscaler patches
  - patch: |-
      apiVersion: autoscaling/v2
      kind: HorizontalPodAutoscaler
      metadata:
        name: celery-worker-autoscaler
      spec:
        minReplicas: 2
    target:
      kind: HorizontalPodAutoscaler
      name: celery-worker-autoscaler

  # Ingress patches
  - patch: |-
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: examxv2-ingress
        annotations:
          alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:399600302704:certificate/29c7b407-7f44-4060-ab94-602a60d331a5
          alb.ingress.kubernetes.io/auth-tls-verify-client: "optional"
          alb.ingress.kubernetes.io/auth-tls-secret: "examxv2-production/client-ca-cert"
          alb.ingress.kubernetes.io/custom-response-headers: >-
            SSL-Client-Cert:${tls.client_cert}~
            SSL-Client-Verify:${tls.client_verified}~
            SSL-Client-DN:${tls.client_subject_dn}
      spec:
        tls:
          - hosts:
              - examx.ai
            secretName: tls-secret
    target:
      kind: Ingress
      name: examxv2-ingress

  # Secrets patches
  - patch: |-
      apiVersion: secrets-store.csi.x-k8s.io/v1
      kind: SecretProviderClass
      metadata:
        name: examxv2-backend-secrets
      spec:
        parameters:
          objects: |
            - objectName: arn:aws:secretsmanager:ap-south-1:399600302704:secret:examxv2-prod-nmQjmP
              objectAlias: ".env"
              objectType: "secretsmanager"
    target:
      kind: SecretProviderClass
      name: examxv2-backend-secrets

  # # Redis Autoscaler patches
  # - patch: |-
  #     apiVersion: autoscaling/v2
  #     kind: HorizontalPodAutoscaler
  #     metadata:
  #       name: redis-pod-autoscaler
  #     spec:
  #       minReplicas: 1
  #       maxReplicas: 5
  #   target:
  #     kind: HorizontalPodAutoscaler
  #     name: redis-pod-autoscaler
